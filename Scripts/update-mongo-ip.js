const axios = require("axios"); const path = require("path"); const fs = require("fs"); require("dotenv").config({ path: path.resolve(__dirname, "../backend/.env") }); const MONGODB_PROJECT_ID = process.env.MONGODB_PROJECT_ID || ""; const IP_CACHE_FILE = path.join(__dirname, ".last_ip_address"); async function getCurrentIP() { try { const response = await axios.get("https://api.ipify.org?format=json"); return response.data.ip; } catch (error) { console.error("Error getting current IP:", error.message); throw error; } } async function main() { try { if (!MONGODB_PROJECT_ID) { console.error("MongoDB Atlas Project ID is not configured."); console.log("Please set the MONGODB_PROJECT_ID in your .env file."); return; } const ip = await getCurrentIP(); console.log(`\n===== MongoDB Atlas IP Whitelist Management =====`); console.log(`Your current IP address is: ${ip}`); console.log(`\nTo update your MongoDB Atlas IP whitelist:`); console.log(`1. Go to: https://cloud.mongodb.com/v2/${MONGODB_PROJECT_ID}#/security/network/accessList`); console.log(`2. Click "+ ADD IP ADDRESS"`); console.log(`3. Click "ADD CURRENT IP ADDRESS" or enter: ${ip}`); let cachedIP = ""; try { if (fs.existsSync(IP_CACHE_FILE)) { cachedIP = fs.readFileSync(IP_CACHE_FILE, "utf8").trim(); console.log(`Last recorded IP: ${cachedIP}`); if (ip !== cachedIP) { console.log("Your IP has changed - update required."); } } fs.writeFileSync(IP_CACHE_FILE, ip); } catch (error) { console.error("Error:", error.message); } } catch (error) { console.error("Error:", error.message); } } main();
